name: Next.js app deployment

# on:
#   pull_request:
#     types: [closed]
#     branches:
#       - main
#     paths-ignore:
#       - 'multilingual-nextjs-functions/**'
#       - 'function-app-deployment.bicep'
on: workflow_dispatch

permissions:
  id-token: write
  contents: read

env:
  APP_LOCATION: '/' # location of your client code
  OUTPUT_LOCATION: '.next' # location of client code build output
  AZURE_WEBAPP_NAME: 'multilingual-nextjs-app'

jobs:
  provision:
    # Ensures that app only deploys if the PR has been accepted and merged, and isn't just a change to the function app files
    if: ${{ github.event.pull_request.merged }}
    runs-on: ubuntu-latest

    steps:
      # Checkout code
      - uses: actions/checkout@main

      # Log into Azure
      - uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Ensure resource group exists before deploying resources
      - uses: azure/cli@v2
        with:
          inlineScript: |
            #!/bin/bash
            az group create --name ${{ vars.RESOURCE_GROUP_NAME }} --location ${{ vars.RESOURCE_GROUP_LOCATION }}
            echo "Azure resource group created"

      # Deploy ARM template
      - name: Deploy Azure Resource Manager (ARM Template)
        uses: azure/arm-deploy@v2
        with:
          # Provide the scope of the deployment. Valid values are: 'resourcegroup', 'tenant', 'managementgroup', 'subscription'
          scope: 'resourcegroup'
          # Provide the name of a resource group, only required for resource Group deployments.
          resourceGroupName: ${{ vars.RESOURCE_GROUP_NAME }}
          # Specify the path or URL to the Azure Resource Manager template.
          template: './nextjs-app-deployment.bicep'
          # Incremental (only add resources to resource group) or Complete (remove extra resources from resource group) or Validate (only validates the template).
          deploymentMode: 'Incremental'
          parameters: appName=${{ env.AZURE_WEBAPP_NAME }}

  build-and-deploy:
    runs-on: ubuntu-latest
    needs: provision

    steps:
      - name: Checkout Source
        uses: actions/checkout@v4

      - name: Setup Node.js version
        uses: actions/setup-node@v4
        with:
          node-version: '18.x'

      - name: Install Dependencies
        run: npm install

      - name: Build Next.js app
        run: npm run build

      # Log into Azure
      - uses: azure/login@v2
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      - name: Get Static Web App API Key
        run: |
          api_key=$(az staticwebapp secrets list --name ${{ env.AZURE_WEBAPP_NAME }} --query "properties.apiKey" -o tsv)
          echo "API_KEY=$api_key" >> $GITHUB_ENV

      - name: Deploy to Azure Static Web Apps
        uses: azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ env.API_KEY }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for GitHub integrations (i.e. PR comments)
          action: 'upload'
          app_location: ${{ env.APP_LOCATION }}
          output_location: ${{ env.OUTPUT_LOCATION }}
          skip_app_build: true
